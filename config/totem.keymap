#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define FN   3
#define BT   4

&mt {
    quick-tap-ms = <175>;
    flavor = "balanced";
    tapping-term-ms = <280>;
    require-prior-idle-ms = <150>;
    hold-trigger-on-release;
    hold-trigger-key-positions = <21 22 23 24 27 29 28 30>;
};

/ {
    combos {
        compatible = "zmk,combos";

        personal-email {
            bindings = <&pem>;
            key-positions = <2 3 6>;
        };

        work-email {
            bindings = <&wem>;
            key-positions = <1 2 6>;
        };
    };

    macros {
        pem: personalEmail {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp B &kp R &kp I &kp A &kp N &kp Y &kp U &kp N0 &kp N7 &kp N1 &kp N7 &kp AT &kp M &kp S &kp N &kp DOT &kp C &kp O &kp M>;
            label = "PERSONALEMAIL";
        };

        wem: wem {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp B &kp R &kp I &kp A &kp N &kp DOT &kp Y &kp U &kp AT &kp T &kp R &kp O &kp W &kp E &kp P &kp R &kp I &kp C &kp E &kp DOT &kp C &kp O &kp M>;
            label = "WEM";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "BASE";
            bindings = <
        &kp Q       &kp W       &kp E        &kp R        &kp T           &kp Y    &kp U        &kp I            &kp O         &kp P
        &kp A       &kp S       &kp D        &kp F        &kp G           &kp H    &kp J        &kp K            &kp L         &kp SEMI
&tog 5  &mt LGUI Z  &mt LALT X  &mt LCTRL C  &mt LSHFT V  &kp B           &kp N    &mt LSHFT M  &mt LCTRL COMMA  &mt LALT DOT  &mt LGUI FSLH  &kp BSPC
                                &lt 5 ESC    &kp ENTER    &lt FN SPACE    &mo SYM  &mo NAV      &kp LGUI
            >;
        };

        nav_layer {
            label = "NAVI";
            bindings = <
        &kp N1    &kp N2    &kp N3     &kp N4     &kp N5        &kp N6     &kp N7    &kp N8   &kp N9     &kp N0
        &kp HOME  &kp END   &kp CAPS   &kp PG_UP  &caps_word    &kp LEFT   &kp DOWN  &kp UP   &kp RIGHT  &kp BSPC
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp PG_DN  &kp LSHFT     &kp PSCRN  &kp ESC   &kp TAB  &kp INS    &kp DEL   &trans
                            &trans     &trans     &trans        &trans     &trans    &trans
            >;
        };

        sym_layer {
            label = "SYM";
            bindings = <
        &kp EXCL  &kp AT    &kp LBRC  &kp RBRC  &trans       &trans       &kp TILDE     &kp CARET        &trans     &kp DQT
        &kp HASH  &kp DLLR  &kp LPAR  &kp RPAR  &kp GRAVE    &kp KP_PLUS  &kp KP_MINUS  &kp KP_ASTERISK  &kp PRCNT  &kp SQT
&trans  &trans    &trans    &kp LBKT  &kp RBKT  &trans       &kp AMPS     &kp EQUAL     &kp UNDER        &kp BSLH   &kp PIPE  &trans
                            &trans    &trans    &trans       &trans       &trans        &trans
            >;
        };

        fn_layer {
            label = "FN";
            bindings = <
        &kp F1     &kp F2     &kp F3            &kp F4             &kp F5          &kp F6  &kp F7  &kp F8  &kp F9   &kp F10
        &trans     &trans     &kp LC(LG(LEFT))  &kp LC(LG(RIGHT))  &kp C_VOL_UP    &trans  &trans  &trans  &kp F11  &kp F12
&trans  &kp LC(Z)  &kp LC(X)  &kp LC(C)         &kp LC(V)          &kp C_VOL_DN    &trans  &trans  &trans  &trans   &trans   &trans
                              &mo BT            &kp C_MUTE         &trans          &trans  &trans  &trans
            >;
        };

        bt_layer {
            label = "BT";
            bindings = <
            &out OUT_BLE  &out OUT_USB  &trans  &trans  &trans    &bt BT_SEL 0   &bt BT_SEL 1    &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4
            &trans        &trans        &trans  &trans  &trans    &bt BT_DISC 0  &bt BT_DISC 1   &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4
&sys_reset  &trans        &trans        &trans  &trans  &trans    &bt BT_CLR     &bt BT_CLR_ALL  &trans         &trans         &trans         &sys_reset
                                        &trans  &trans  &trans    &trans         &trans          &trans
            >;
        };

        left_hand {
            bindings = <
        &trans    &kp LC(W)  &kp LC(PG_UP)  &kp LC(PG_DN)  &trans            &trans  &trans  &trans  &trans  &trans
        &kp LEFT  &kp RIGHT  &kp UP         &kp PG_UP      &msc SCRL_UP      &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans     &kp DOWN       &kp PG_DN      &msc SCRL_DOWN    &trans  &trans  &trans  &trans  &trans  &trans
                             &trans         &trans         &trans            &trans  &trans  &trans
            >;
        };
    };
};
